{"version":3,"sources":["ColorModeToggle.jsx","Talk.jsx","Page.jsx","App.js","index.js"],"names":["ColorModeToggle","useColorMode","colorMode","toggleColorMode","IconButton","onClick","icon","variantColor","aria-label","Talk","title","link","description","onCheck","isChecked","Box","flex","textAlign","Flex","justify","Checkbox","pl","pr","onChange","e","Text","fontSize","Link","isExternal","href","Page","children","theme","useTheme","bgColor","light","colors","white","dark","gray","color","black","style","background","keyIsStored","key","localStorage","getItem","App","useState","data","talks","filter","talk","map","checkedArr","setCheckedArr","checked","storedItem","setItem","Date","removeItem","updateStorage","target","className","ThemeProvider","CSSReset","ColorModeProvider","Heading","p","reduce","acc","count","i","arr","Divider","time","includes","Grid","templateColumns","gap","w","h","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d5d71e0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { IconButton, useColorMode } from \"@chakra-ui/core\";\n\nfunction ColorModeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <IconButton\n        onClick={toggleColorMode}\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        variantColor=\"blue\"\n        aria-label={`Change to ${\n          colorMode === \"light\" ? \"dark\" : \"light\"\n        } mode`}\n      />\n    </header>\n  );\n}\n\nexport default ColorModeToggle;\n","import React from \"react\";\nimport {\n  Box,\n  Checkbox,\n  Link,\n  Flex,\n  Text,\n} from \"@chakra-ui/core\";\n\nexport default function Talk({ title, link, description, onCheck, isChecked }) {\n  return (\n    <Box flex=\"1\" textAlign=\"left\">\n      <Flex justify=\"space-between\">\n        <Flex>\n          <Checkbox\n            pl={3}\n            pr={3}\n            isChecked={isChecked}\n            onChange={e => onCheck(e, link)}\n          />\n          <Text fontSize=\"lg\">\n            <Link\n              isExternal\n              href={link}\n              >\n              {title}\n            </Link>\n          </Text>\n        </Flex>\n        <Text pr={3}>\n          <Link\n            isExternal\n            href={link}\n            >\n          {description}\n          </Link>\n        </Text>\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { useColorMode, useTheme } from \"@chakra-ui/core\";\n\nfunction Page({ children }) {\n  const { colorMode } = useColorMode();\n  const theme = useTheme();\n  const bgColor = {\n    light: theme.colors.white,\n    dark: theme.colors.gray[\"800\"]\n  };\n  const color = { light: theme.colors.black, dark: theme.colors.white };\n  const style = {\n    background: bgColor[colorMode],\n    color: color[colorMode]\n  };\n  return <div style={style}>{children}</div>;\n}\n\nexport default Page;\n","// https://www.churchofjesuschrist.org/general-conference/speakers/archive?speaker=Russell%20M.%20Nelson&lang=eng&page=1\n\nimport React, { useState } from \"react\";\nimport {\n  Divider,\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  Heading,\n  Flex,\n  Link,\n  Text,\n  Grid,\n  Box,\n} from \"@chakra-ui/core\";\nimport ColorModeToggle from \"./ColorModeToggle\";\nimport Talk from \"./Talk\";\nimport Page from \"./Page\";\nimport data from \"./data/data.json\";\n\nfunction updateStorage(key, checked) {\n  const storedItem = localStorage.getItem(key);\n  checked && !storedItem\n    ? localStorage.setItem(key, new Date())\n    : localStorage.removeItem(key);\n}\n\nfunction getStoredCount(keys) {\n  return keys.reduce((acc, key) => {\n    if (localStorage.getItem(key)) {\n      acc++;\n    }\n    return acc;\n  }, 0);\n}\n\nfunction keyIsStored(key) {\n  return localStorage.getItem(key);\n}\n\nexport default function App() {\n  const [checkedArr, setCheckedArr] = useState(() => {\n    return data.talks\n      .filter(talk => keyIsStored(talk.href))\n      .map(talk => talk.href)\n  });\n\n  function onCheck(e, href) {\n    updateStorage(href, e.target.checked)\n    setCheckedArr(data.talks\n      .filter(talk => keyIsStored(talk.href))\n      .map(talk => talk.href))\n  }\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <CSSReset />\n        <ColorModeProvider>\n          <Page>\n            <Heading p={3}>\n              <Flex justify=\"space-between\">\n               <Flex> \n                  <Link\n                    isExternal\n                    href=\"https://www.churchofjesuschrist.org/general-conference/speakers/archive?speaker=Russell%20M.%20Nelson&lang=eng&page=1\"\n                  >\n                    Talks of President Nelson\n                  </Link>\n                  <Text pl={2}>\n                    (<span>{getStoredCount(data.talks.map(talk => talk.href))}</span>/\n                    <span>{data.count}</span>)\n                  </Text>\n                </Flex>\n                <ColorModeToggle />\n              </Flex>\n            </Heading>\n              {data.talks.map((talk, i, arr) => {\n                return (\n                  <div key={`${talk.href}`}>\n                    <Divider />\n                    <Talk\n                      title={talk.title}\n                      link={talk.href}\n                      description={talk.time}\n                      onCheck={onCheck}\n                      isChecked={checkedArr.includes(talk.href)}\n                    />\n                  </div>\n                );\n              })}\n            <Divider />\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n              <Box w=\"100%\" h=\"30\" p={10}>\n                <Flex justify=\"right\">\n                  <Link\n                    isExternal\n                    href=\"https://www.churchofjesuschrist.org/church/leader/russell-m-nelson\"\n                    >\n                    President Russell M. Nelson\n                  </Link>\n                </Flex>\n              </Box>\n              <Box w=\"100%\" h=\"30\" p={10}>\n                <Flex justify=\"left\">\n                  <Link\n                    isExternal\n                    href=\"https://zvakanaka.github.io/scriptures-of-Jesus\"\n                  >\n                    Sciptures of Jesus\n                  </Link>\n                </Flex>\n              </Box>\n            </Grid>\n          </Page>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}