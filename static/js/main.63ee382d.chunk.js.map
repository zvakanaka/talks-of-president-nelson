{"version":3,"sources":["ColorModeToggle.jsx","Talk.jsx","Page.jsx","App.js","index.js"],"names":["ColorModeToggle","_useColorMode","useColorMode","colorMode","toggleColorMode","react_default","a","createElement","IconButton","onClick","icon","variantColor","aria-label","concat","Talk","_ref","title","link","description","onCheck","isChecked","Box","flex","textAlign","Flex","justify","Checkbox","pl","pr","onChange","e","Text","fontSize","Link","isExternal","href","Page","children","theme","useTheme","bgColor","light","colors","white","dark","gray","color","black","style","background","keyIsStored","key","localStorage","getItem","rootElement","document","getElementById","ReactDOM","render","_useState","useState","data","talks","filter","talk","map","_useState2","Object","slicedToArray","checkedArr","setCheckedArr","checked","storedItem","setItem","Date","removeItem","updateStorage","target","className","ThemeProvider","CSSReset","ColorModeProvider","src_Page","Heading","p","reduce","acc","count","src_ColorModeToggle","i","arr","Divider","time","includes","Grid","templateColumns","gap","w","h"],"mappings":"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","file":"static/js/main.63ee382d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { IconButton, useColorMode } from \"@chakra-ui/core\";\n\nfunction ColorModeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <IconButton\n        onClick={toggleColorMode}\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        variantColor=\"blue\"\n        aria-label={`Change to ${\n          colorMode === \"light\" ? \"dark\" : \"light\"\n        } mode`}\n      />\n    </header>\n  );\n}\n\nexport default ColorModeToggle;\n","import React from \"react\";\nimport {\n  Box,\n  Checkbox,\n  Link,\n  Flex,\n  Text,\n} from \"@chakra-ui/core\";\n\nexport default function Talk({ title, link, description, onCheck, isChecked }) {\n  return (\n    <Box flex=\"1\" textAlign=\"left\">\n      <Flex justify=\"space-between\">\n        <Flex>\n          <Checkbox\n            pl={3}\n            pr={3}\n            isChecked={isChecked}\n            onChange={e => onCheck(e, link)}\n          />\n          <Text fontSize=\"lg\">\n            <Link\n              isExternal\n              href={link}\n              >\n              {title}\n            </Link>\n          </Text>\n        </Flex>\n        <Text pr={3}>\n          <Link\n            isExternal\n            href={link}\n            >\n          {description}\n          </Link>\n        </Text>\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { useColorMode, useTheme } from \"@chakra-ui/core\";\n\nfunction Page({ children }) {\n  const { colorMode } = useColorMode();\n  const theme = useTheme();\n  const bgColor = {\n    light: theme.colors.white,\n    dark: theme.colors.gray[\"800\"]\n  };\n  const color = { light: theme.colors.black, dark: theme.colors.white };\n  const style = {\n    background: bgColor[colorMode],\n    color: color[colorMode]\n  };\n  return <div style={style}>{children}</div>;\n}\n\nexport default Page;\n","// https://www.churchofjesuschrist.org/general-conference/speakers/archive?speaker=Russell%20M.%20Nelson&lang=eng&page=1\n\nimport React, { useState } from \"react\";\nimport {\n  Divider,\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  Heading,\n  Flex,\n  Link,\n  Text,\n  Grid,\n  Box,\n} from \"@chakra-ui/core\";\nimport ColorModeToggle from \"./ColorModeToggle\";\nimport Talk from \"./Talk\";\nimport Page from \"./Page\";\nimport data from \"./data/data.json\";\n\nfunction updateStorage(key, checked) {\n  const storedItem = localStorage.getItem(key);\n  checked && !storedItem\n    ? localStorage.setItem(key, new Date())\n    : localStorage.removeItem(key);\n}\n\nfunction getStoredCount(keys) {\n  return keys.reduce((acc, key) => {\n    if (localStorage.getItem(key)) {\n      acc++;\n    }\n    return acc;\n  }, 0);\n}\n\nfunction keyIsStored(key) {\n  return localStorage.getItem(key);\n}\n\nexport default function App() {\n  const [checkedArr, setCheckedArr] = useState(() => {\n    return data.talks\n      .filter(talk => keyIsStored(talk.href))\n      .map(talk => talk.href)\n  });\n\n  function onCheck(e, href) {\n    updateStorage(href, e.target.checked)\n    setCheckedArr(data.talks\n      .filter(talk => keyIsStored(talk.href))\n      .map(talk => talk.href))\n  }\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <CSSReset />\n        <ColorModeProvider>\n          <Page>\n            <Heading p={3}>\n              <Flex justify=\"space-between\">\n               <Flex> \n                  <Link\n                    isExternal\n                    href=\"https://www.churchofjesuschrist.org/general-conference/speakers/archive?speaker=Russell%20M.%20Nelson&lang=eng&page=1\"\n                  >\n                    Talks of President Nelson\n                  </Link>\n                  <Text pl={2}>\n                    (<span>{getStoredCount(data.talks.map(talk => talk.href))}</span>/\n                    <span>{data.count}</span>)\n                  </Text>\n                </Flex>\n                <ColorModeToggle />\n              </Flex>\n            </Heading>\n              {data.talks.map((talk, i, arr) => {\n                return (\n                  <div key={`${talk.href}`}>\n                    <Divider />\n                    <Talk\n                      title={talk.title}\n                      link={talk.href}\n                      description={talk.time}\n                      onCheck={onCheck}\n                      isChecked={checkedArr.includes(talk.href)}\n                    />\n                  </div>\n                );\n              })}\n            <Divider />\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n              <Box w=\"100%\" h=\"30\" p={10}>\n                <Flex justify=\"right\">\n                  <Link\n                    isExternal\n                    href=\"https://www.churchofjesuschrist.org/church/leader/russell-m-nelson\"\n                    >\n                    President Russell M. Nelson\n                  </Link>\n                </Flex>\n              </Box>\n              <Box w=\"100%\" h=\"30\" p={10}>\n                <Flex justify=\"left\">\n                  <Link\n                    isExternal\n                    href=\"https://zvakanaka.github.io/scriptures-of-Jesus\"\n                  >\n                    Sciptures of Jesus\n                  </Link>\n                </Flex>\n              </Box>\n            </Grid>\n          </Page>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}